{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xuel/workspace/GitHub/programmer-english/src/components/SoundIcon/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport VolumeIcon from './volume-icons/VolumeIcon';\nimport VolumeLowIcon from './volume-icons/VolumeLowIcon';\nimport VolumeMediumIcon from './volume-icons/VolumeMediumIcon';\nimport VolumeHighIcon from './volume-icons/VolumeHieghIcon';\nconst volumeIcons = [VolumeIcon, VolumeLowIcon, VolumeMediumIcon, VolumeHighIcon];\nexport const SoundIcon = /*#__PURE__*/React.memo(_c = _s(({\n  duration = 500,\n  animated = false,\n  ...rest\n}, ref) => {\n  _s();\n\n  const [animationFrameIndex, setAnimationFrameIndex] = useState(0);\n  useEffect(() => {\n    if (animated) {\n      const timer = window.setTimeout(() => {\n        const index = animationFrameIndex < volumeIcons.length - 1 ? animationFrameIndex + 1 : 0;\n        setAnimationFrameIndex(index);\n      }, duration);\n      return () => {\n        clearTimeout(timer);\n      };\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [animated, animationFrameIndex]);\n  useEffect(() => {\n    if (!animated) {\n      const timer = setTimeout(() => {\n        setAnimationFrameIndex(0);\n      }, duration);\n      return () => clearTimeout(timer);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [animated]);\n  const Icon = volumeIcons[animationFrameIndex];\n  return /*#__PURE__*/_jsxDEV(Icon, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}, \"gOchI0QPEu30BhpF60gqPtk+sw8=\"));\n_c2 = SoundIcon;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SoundIcon$React.memo\");\n$RefreshReg$(_c2, \"SoundIcon\");","map":{"version":3,"sources":["/Users/xuel/workspace/GitHub/programmer-english/src/components/SoundIcon/index.tsx"],"names":["React","useEffect","useState","VolumeIcon","VolumeLowIcon","VolumeMediumIcon","VolumeHighIcon","volumeIcons","SoundIcon","memo","duration","animated","rest","ref","animationFrameIndex","setAnimationFrameIndex","timer","window","setTimeout","index","length","clearTimeout","Icon"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AAEA,MAAMC,WAAW,GAAG,CAACJ,UAAD,EAAaC,aAAb,EAA4BC,gBAA5B,EAA8CC,cAA9C,CAApB;AAEA,OAAO,MAAME,SAAS,gBAAGR,KAAK,CAACS,IAAN,SAA2B,CAAC;AAAEC,EAAAA,QAAQ,GAAG,GAAb;AAAkBC,EAAAA,QAAQ,GAAG,KAA7B;AAAoC,KAAGC;AAAvC,CAAD,EAAgDC,GAAhD,KAAwD;AAAA;;AAC1G,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,CAAD,CAA9D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,QAAJ,EAAc;AACZ,YAAMK,KAAK,GAAGC,MAAM,CAACC,UAAP,CAAkB,MAAM;AACpC,cAAMC,KAAK,GAAGL,mBAAmB,GAAGP,WAAW,CAACa,MAAZ,GAAqB,CAA3C,GAA+CN,mBAAmB,GAAG,CAArE,GAAyE,CAAvF;AACAC,QAAAA,sBAAsB,CAACI,KAAD,CAAtB;AACD,OAHa,EAGXT,QAHW,CAAd;AAIA,aAAO,MAAM;AACXW,QAAAA,YAAY,CAACL,KAAD,CAAZ;AACD,OAFD;AAGD,KATa,CAUd;;AACD,GAXQ,EAWN,CAACL,QAAD,EAAWG,mBAAX,CAXM,CAAT;AAaAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,QAAL,EAAe;AACb,YAAMK,KAAK,GAAGE,UAAU,CAAC,MAAM;AAC7BH,QAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACD,OAFuB,EAErBL,QAFqB,CAAxB;AAGA,aAAO,MAAMW,YAAY,CAACL,KAAD,CAAzB;AACD,KANa,CAOd;;AACD,GARQ,EAQN,CAACL,QAAD,CARM,CAAT;AAUA,QAAMW,IAAI,GAAGf,WAAW,CAACO,mBAAD,CAAxB;AAEA,sBAAO,QAAC,IAAD,OAAUF;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA7BwB,kCAAlB;MAAMJ,S","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport VolumeIcon from './volume-icons/VolumeIcon'\nimport VolumeLowIcon from './volume-icons/VolumeLowIcon'\nimport VolumeMediumIcon from './volume-icons/VolumeMediumIcon'\nimport VolumeHighIcon from './volume-icons/VolumeHieghIcon'\n\nconst volumeIcons = [VolumeIcon, VolumeLowIcon, VolumeMediumIcon, VolumeHighIcon]\n\nexport const SoundIcon = React.memo<SoundIconProps>(({ duration = 500, animated = false, ...rest }, ref) => {\n  const [animationFrameIndex, setAnimationFrameIndex] = useState(0)\n\n  useEffect(() => {\n    if (animated) {\n      const timer = window.setTimeout(() => {\n        const index = animationFrameIndex < volumeIcons.length - 1 ? animationFrameIndex + 1 : 0\n        setAnimationFrameIndex(index)\n      }, duration)\n      return () => {\n        clearTimeout(timer)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animated, animationFrameIndex])\n\n  useEffect(() => {\n    if (!animated) {\n      const timer = setTimeout(() => {\n        setAnimationFrameIndex(0)\n      }, duration)\n      return () => clearTimeout(timer)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animated])\n\n  const Icon = volumeIcons[animationFrameIndex]\n\n  return <Icon {...rest} />\n})\n\nexport type SoundIconProps = {\n  animated?: boolean\n  duration?: number\n} & Omit<React.SVGProps<SVGSVGElement>, 'ref'>\n\nexport type SoundIconRef = {\n  playAnimation(): void\n  stopAnimation(): void\n}\n"]},"metadata":{},"sourceType":"module"}