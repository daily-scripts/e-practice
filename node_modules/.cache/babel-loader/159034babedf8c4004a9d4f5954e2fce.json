{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xuel/workspace/GitHub/programmer-english/src/pages/Typing/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Header from 'components/Header';\nimport Main from 'components/Main';\nimport Word from 'components/Word';\nimport Translation from 'components/Translation';\nimport Speed from 'components/Speed';\nimport Modals from 'components/Modals';\nimport Loading from 'components/Loading';\nimport Phonetic from 'components/Phonetic';\nimport PronunciationSwitcher from './PronunciationSwitcher';\nimport { isLegal, IsDesktop } from 'utils/utils';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useModals } from 'hooks/useModals';\nimport useSwitcherState from './hooks/useSwitcherState';\nimport Switcher from './Switcher';\nimport { useWordList } from './hooks/useWordList';\nimport Layout from '../../components/Layout';\nimport { NavLink } from 'react-router-dom';\nimport usePronunciation from './hooks/usePronunciation';\nimport Tooltip from 'components/Tooltip';\n\nconst App = () => {\n  _s();\n\n  const [order, setOrder] = useState(0);\n  const [inputCount, setInputCount] = useState(0);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [isStart, setIsStart] = useState(false);\n  const [switcherState, switcherStateDispatch] = useSwitcherState({\n    wordVisible: true,\n    phonetic: false\n  });\n  const wordList = useWordList();\n  const [pronunciation, pronunciationDispatch] = usePronunciation();\n  const {\n    modalState,\n    title: modalTitle,\n    content: modalContent,\n    firstButton: modalFirstBtn,\n    secondButton: modalSecondBtn,\n    thirdButton: modalThirdBtn,\n    thirdBtnHotkey,\n    setThirdBtnHotkey,\n    firstButtonOnclick: modalFirstBtnOnclick,\n    secondButtonOnclick: modalSecondBtnOnclick,\n    thirdButtonOnclick: modalThirdBtnOnclick,\n    setModalState,\n    setMessage: setModalMessage,\n    setHandler: setModalHandler\n  } = useModals(false, '提示');\n  useEffect(() => {\n    // 检测用户设备\n    if (!IsDesktop()) {\n      setTimeout(() => {\n        alert(' Qwerty Learner 目的为提高键盘工作者的英语输入效率，目前暂未适配移动端，希望您使用桌面端浏览器访问。如您使用的是 Ipad 等平板电脑设备，可以使用外接键盘使用本软件。');\n      }, 500);\n    }\n  }, []);\n  useHotkeys('enter', () => {\n    if (modalState === false) {\n      setIsStart(isStart => !isStart);\n    }\n  }, [modalState]);\n  useEffect(() => {\n    var _document$getElements;\n\n    const onKeydown = e => {\n      if (isLegal(e.key) && !e.altKey && !e.ctrlKey && !e.metaKey) {\n        if (isStart) {\n          setInputCount(count => count + 1);\n        }\n      }\n\n      setIsStart(true);\n    };\n\n    const onBlur = () => {\n      if (isStart) {\n        setIsStart(false);\n      }\n    };\n\n    const hjOnclick = () => {\n      setIsStart(false);\n    };\n\n    window.addEventListener('blur', onBlur);\n    window.addEventListener('keydown', onKeydown);\n    (_document$getElements = document.getElementsByClassName('_hj_feedback_container')[0]) === null || _document$getElements === void 0 ? void 0 : _document$getElements.addEventListener('click', hjOnclick);\n    return () => {\n      var _document$getElements2;\n\n      window.removeEventListener('keydown', onKeydown);\n      window.removeEventListener('blur', onBlur);\n      (_document$getElements2 = document.getElementsByClassName('_hj_feedback_container')[0]) === null || _document$getElements2 === void 0 ? void 0 : _document$getElements2.removeEventListener('click', hjOnclick);\n    };\n  }, [isStart]);\n\n  const modalHandlerGenerator = (chapter, order, modalState) => {\n    return () => {\n      setOrder(order);\n      wordList === null || wordList === void 0 ? void 0 : wordList.setChapterNumber(chapter);\n      setModalState(modalState);\n      setIsStart(true);\n    };\n  };\n\n  const onFinish = () => {\n    if (wordList === undefined) {\n      return;\n    }\n\n    if (order === wordList.words.length - 1) {\n      setIsStart(false); // 用户完成当前章节\n\n      if (wordList.chapter === wordList.chapterListLength - 1) {\n        setModalState(true);\n        setModalMessage('提示', '您已完成最后一个章节', '重置到第一章节', '重复本章节', '默写本章节');\n        setThirdBtnHotkey('v');\n        setModalHandler(modalHandlerGenerator(0, 0, false), modalHandlerGenerator(wordList.chapter, 0, false), () => {\n          modalHandlerGenerator(wordList.chapter, 0, false)();\n          switcherStateDispatch('wordVisible', false);\n          setIsStart(true);\n        });\n      } else {\n        setModalState(true);\n        setModalMessage('提示', '您已完成本章节', '下一章节', '重复本章节', '默写本章节');\n        setThirdBtnHotkey('v');\n        setModalHandler(modalHandlerGenerator(wordList.chapter + 1, 0, false), modalHandlerGenerator(wordList.chapter, 0, false), () => {\n          modalHandlerGenerator(wordList.chapter, 0, false)();\n          switcherStateDispatch('wordVisible', false);\n          setIsStart(true);\n        });\n      }\n    } else {\n      setOrder(order => order + 1);\n      setCorrectCount(count => count + wordList.words[order].name.trim().length);\n    }\n  };\n\n  const changePronunciation = useCallback(state => {\n    pronunciationDispatch(state);\n  }, [pronunciationDispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [modalState && /*#__PURE__*/_jsxDEV(Modals, {\n      state: modalState,\n      title: modalTitle,\n      content: modalContent,\n      firstButton: modalFirstBtn,\n      secondButton: modalSecondBtn,\n      thirdButton: modalThirdBtn,\n      thirdButtonHotkey: thirdBtnHotkey,\n      firstButtonOnclick: modalFirstBtnOnclick,\n      secondButtonOnclick: modalSecondBtnOnclick,\n      thirdButtonOnclick: modalThirdBtnOnclick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), wordList === undefined ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          content: \"\\u8BCD\\u5178\\u7AE0\\u8282\\u5207\\u6362\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"text-lg px-4 py-1 rounded-lg transition-colors duration-300 ease-in-out focus:outline-none dark:text-white dark:text-opacity-60 hover:bg-indigo-400 hover:text-white dark:hover:text-opacity-100\",\n            to: \"/gallery\",\n            children: [wordList.dictName, \" \\u7B2C \", wordList.chapter + 1, \" \\u7AE0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PronunciationSwitcher, {\n          state: pronunciation.toString(),\n          changePronunciationState: changePronunciation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Switcher, {\n          state: switcherState,\n          dispatch: switcherStateDispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: \"\\u5FEB\\u6377\\u952E Enter\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${isStart ? 'bg-gray-300 dark:bg-gray-700' : 'bg-indigo-400'}  text-white dark:text-opacity-80 transition-colors duration-300 text-lg w-20 px-6 py-1 rounded-lg focus:outline-none flex items-center justify-center`,\n            onClick: e => {\n              setIsStart(isStart => !isStart);\n            },\n            children: isStart ? 'Pause' : 'Start'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container h-full relative flex mx-auto flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-1/3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), !isStart && /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"pb-4 text-xl text-gray-600 dark:text-gray-50 animate-pulse\",\n            children: \"\\u6309\\u4EFB\\u610F\\u952E\\u5F00\\u59CB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 28\n          }, this), isStart && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Word, {\n              word: wordList.words[order].name,\n              onFinish: onFinish,\n              isStart: isStart,\n              wordVisible: switcherState.wordVisible\n            }, `word-${wordList.words[order].name}-${order}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), switcherState.phonetic && (wordList.words[order].usphone || wordList.words[order].ukphone) && /*#__PURE__*/_jsxDEV(Phonetic, {\n              usphone: wordList.words[order].usphone,\n              ukphone: wordList.words[order].ukphone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Translation, {\n              trans: wordList.words[order].trans.join('；')\n            }, `trans-${wordList.words[order].name}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Speed, {\n            correctCount: correctCount,\n            inputCount: inputCount,\n            isStart: isStart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"LgvPO2zYZD2pIrlZFQqU4u4lP0c=\", false, function () {\n  return [useSwitcherState, useWordList, usePronunciation, useModals, useHotkeys];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/xuel/workspace/GitHub/programmer-english/src/pages/Typing/index.tsx"],"names":["React","useCallback","useEffect","useState","Header","Main","Word","Translation","Speed","Modals","Loading","Phonetic","PronunciationSwitcher","isLegal","IsDesktop","useHotkeys","useModals","useSwitcherState","Switcher","useWordList","Layout","NavLink","usePronunciation","Tooltip","App","order","setOrder","inputCount","setInputCount","correctCount","setCorrectCount","isStart","setIsStart","switcherState","switcherStateDispatch","wordVisible","phonetic","wordList","pronunciation","pronunciationDispatch","modalState","title","modalTitle","content","modalContent","firstButton","modalFirstBtn","secondButton","modalSecondBtn","thirdButton","modalThirdBtn","thirdBtnHotkey","setThirdBtnHotkey","firstButtonOnclick","modalFirstBtnOnclick","secondButtonOnclick","modalSecondBtnOnclick","thirdButtonOnclick","modalThirdBtnOnclick","setModalState","setMessage","setModalMessage","setHandler","setModalHandler","setTimeout","alert","onKeydown","e","key","altKey","ctrlKey","metaKey","count","onBlur","hjOnclick","window","addEventListener","document","getElementsByClassName","removeEventListener","modalHandlerGenerator","chapter","setChapterNumber","onFinish","undefined","words","length","chapterListLength","name","trim","changePronunciation","state","dictName","toString","usphone","ukphone","trans","join"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport Header from 'components/Header'\nimport Main from 'components/Main'\nimport Word from 'components/Word'\nimport Translation from 'components/Translation'\nimport Speed from 'components/Speed'\nimport Modals from 'components/Modals'\nimport Loading from 'components/Loading'\nimport Phonetic from 'components/Phonetic'\nimport PronunciationSwitcher from './PronunciationSwitcher'\nimport { isLegal, IsDesktop } from 'utils/utils'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport { useModals } from 'hooks/useModals'\nimport useSwitcherState from './hooks/useSwitcherState'\nimport Switcher from './Switcher'\nimport { useWordList } from './hooks/useWordList'\nimport Layout from '../../components/Layout'\nimport { NavLink } from 'react-router-dom'\nimport usePronunciation from './hooks/usePronunciation'\nimport Tooltip from 'components/Tooltip'\n\nconst App: React.FC = () => {\n  const [order, setOrder] = useState<number>(0)\n\n  const [inputCount, setInputCount] = useState<number>(0)\n  const [correctCount, setCorrectCount] = useState<number>(0)\n  const [isStart, setIsStart] = useState<boolean>(false)\n\n  const [switcherState, switcherStateDispatch] = useSwitcherState({ wordVisible: true, phonetic: false })\n  const wordList = useWordList()\n  const [pronunciation, pronunciationDispatch] = usePronunciation()\n\n  const {\n    modalState,\n    title: modalTitle,\n    content: modalContent,\n    firstButton: modalFirstBtn,\n    secondButton: modalSecondBtn,\n    thirdButton: modalThirdBtn,\n    thirdBtnHotkey,\n    setThirdBtnHotkey,\n    firstButtonOnclick: modalFirstBtnOnclick,\n    secondButtonOnclick: modalSecondBtnOnclick,\n    thirdButtonOnclick: modalThirdBtnOnclick,\n    setModalState,\n    setMessage: setModalMessage,\n    setHandler: setModalHandler,\n  } = useModals(false, '提示')\n\n  useEffect(() => {\n    // 检测用户设备\n    if (!IsDesktop()) {\n      setTimeout(() => {\n        alert(\n          ' Qwerty Learner 目的为提高键盘工作者的英语输入效率，目前暂未适配移动端，希望您使用桌面端浏览器访问。如您使用的是 Ipad 等平板电脑设备，可以使用外接键盘使用本软件。',\n        )\n      }, 500)\n    }\n  }, [])\n\n  useHotkeys(\n    'enter',\n    () => {\n      if (modalState === false) {\n        setIsStart((isStart) => !isStart)\n      }\n    },\n    [modalState],\n  )\n\n  useEffect(() => {\n    const onKeydown = (e: KeyboardEvent) => {\n      if (isLegal(e.key) && !e.altKey && !e.ctrlKey && !e.metaKey) {\n        if (isStart) {\n          setInputCount((count) => count + 1)\n        }\n      }\n      setIsStart(true)\n    }\n    const onBlur = () => {\n      if (isStart) {\n        setIsStart(false)\n      }\n    }\n    const hjOnclick = () => {\n      setIsStart(false)\n    }\n\n    window.addEventListener('blur', onBlur)\n    window.addEventListener('keydown', onKeydown)\n    document.getElementsByClassName('_hj_feedback_container')[0]?.addEventListener('click', hjOnclick)\n\n    return () => {\n      window.removeEventListener('keydown', onKeydown)\n      window.removeEventListener('blur', onBlur)\n      document.getElementsByClassName('_hj_feedback_container')[0]?.removeEventListener('click', hjOnclick)\n    }\n  }, [isStart])\n\n  const modalHandlerGenerator = (chapter: number, order: number, modalState: boolean) => {\n    return () => {\n      setOrder(order)\n      wordList?.setChapterNumber(chapter)\n      setModalState(modalState)\n      setIsStart(true)\n    }\n  }\n\n  const onFinish = () => {\n    if (wordList === undefined) {\n      return\n    }\n    if (order === wordList.words.length - 1) {\n      setIsStart(false)\n      // 用户完成当前章节\n      if (wordList.chapter === wordList.chapterListLength - 1) {\n        setModalState(true)\n        setModalMessage('提示', '您已完成最后一个章节', '重置到第一章节', '重复本章节', '默写本章节')\n        setThirdBtnHotkey('v')\n        setModalHandler(modalHandlerGenerator(0, 0, false), modalHandlerGenerator(wordList.chapter, 0, false), () => {\n          modalHandlerGenerator(wordList.chapter, 0, false)()\n          switcherStateDispatch('wordVisible', false)\n          setIsStart(true)\n        })\n      } else {\n        setModalState(true)\n        setModalMessage('提示', '您已完成本章节', '下一章节', '重复本章节', '默写本章节')\n        setThirdBtnHotkey('v')\n        setModalHandler(modalHandlerGenerator(wordList.chapter + 1, 0, false), modalHandlerGenerator(wordList.chapter, 0, false), () => {\n          modalHandlerGenerator(wordList.chapter, 0, false)()\n          switcherStateDispatch('wordVisible', false)\n          setIsStart(true)\n        })\n      }\n    } else {\n      setOrder((order) => order + 1)\n      setCorrectCount((count) => count + wordList.words[order].name.trim().length)\n    }\n  }\n\n  const changePronunciation = useCallback(\n    (state: string) => {\n      pronunciationDispatch(state)\n    },\n    [pronunciationDispatch],\n  )\n\n  return (\n    <>\n      {modalState && (\n        <Modals\n          state={modalState}\n          title={modalTitle}\n          content={modalContent}\n          firstButton={modalFirstBtn}\n          secondButton={modalSecondBtn}\n          thirdButton={modalThirdBtn}\n          thirdButtonHotkey={thirdBtnHotkey}\n          firstButtonOnclick={modalFirstBtnOnclick}\n          secondButtonOnclick={modalSecondBtnOnclick}\n          thirdButtonOnclick={modalThirdBtnOnclick}\n        />\n      )}\n      {wordList === undefined ? (\n        <Loading />\n      ) : (\n        <Layout>\n          <Header>\n            <Tooltip content=\"词典章节切换\">\n              <NavLink\n                className=\"text-lg px-4 py-1 rounded-lg transition-colors duration-300 ease-in-out focus:outline-none dark:text-white dark:text-opacity-60 hover:bg-indigo-400 hover:text-white dark:hover:text-opacity-100\"\n                to=\"/gallery\"\n              >\n                {wordList.dictName} 第 {wordList.chapter + 1} 章\n              </NavLink>\n            </Tooltip>\n            <PronunciationSwitcher state={pronunciation.toString()} changePronunciationState={changePronunciation} />\n            <Switcher state={switcherState} dispatch={switcherStateDispatch} />\n            <Tooltip content=\"快捷键 Enter\">\n              <button\n                className={`${\n                  isStart ? 'bg-gray-300 dark:bg-gray-700' : 'bg-indigo-400'\n                }  text-white dark:text-opacity-80 transition-colors duration-300 text-lg w-20 px-6 py-1 rounded-lg focus:outline-none flex items-center justify-center`}\n                onClick={(e) => {\n                  setIsStart((isStart) => !isStart)\n                }}\n              >\n                {isStart ? 'Pause' : 'Start'}\n              </button>\n            </Tooltip>\n          </Header>\n          <Main>\n            <div className=\"container h-full relative flex mx-auto flex-col items-center\">\n              <div className=\"h-1/3\"></div>\n              {!isStart && <h3 className=\"pb-4 text-xl text-gray-600 dark:text-gray-50 animate-pulse\">按任意键开始</h3>}\n              {isStart && (\n                <div>\n                  <Word\n                    key={`word-${wordList.words[order].name}-${order}`}\n                    word={wordList.words[order].name}\n                    onFinish={onFinish}\n                    isStart={isStart}\n                    wordVisible={switcherState.wordVisible}\n                  />\n                  {switcherState.phonetic && (wordList.words[order].usphone || wordList.words[order].ukphone) && (\n                    <Phonetic usphone={wordList.words[order].usphone} ukphone={wordList.words[order].ukphone} />\n                  )}\n                  <Translation key={`trans-${wordList.words[order].name}`} trans={wordList.words[order].trans.join('；')} />\n                </div>\n              )}\n              <Speed correctCount={correctCount} inputCount={inputCount} isStart={isStart} />\n            </div>\n          </Main>\n        </Layout>\n      )}\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}