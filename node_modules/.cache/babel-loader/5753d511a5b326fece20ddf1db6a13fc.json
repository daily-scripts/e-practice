{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSetSoundState, useDarkMode } from 'store/AppState';\n\nconst useSwitcherState = initialState => {\n  _s();\n\n  const [phonetic, setPhonetic] = useState(initialState.phonetic);\n  const [wordVisible, setWordVisible] = useState(initialState.wordVisible);\n  const [sound, setSound] = useSetSoundState();\n  const [darkMode, setDarkMode] = useDarkMode();\n\n  const dispatch = (type, newStatus) => {\n    switch (type) {\n      case 'phonetic':\n        setPhonetic(newStatus !== null && newStatus !== void 0 ? newStatus : !phonetic);\n        break;\n\n      case 'wordVisible':\n        setWordVisible(newStatus !== null && newStatus !== void 0 ? newStatus : !wordVisible);\n        break;\n\n      case 'sound':\n        setSound(newStatus !== null && newStatus !== void 0 ? newStatus : !sound);\n        break;\n\n      case 'darkMode':\n        setDarkMode(newStatus !== null && newStatus !== void 0 ? newStatus : !darkMode);\n    }\n  };\n\n  return [{\n    phonetic,\n    wordVisible,\n    sound,\n    darkMode\n  }, dispatch];\n};\n\n_s(useSwitcherState, \"99fCeBHb7bydtIho6dQd7MQEZbk=\", false, function () {\n  return [useSetSoundState, useDarkMode];\n});\n\nexport default useSwitcherState;","map":{"version":3,"sources":["/Users/xuel/workspace/GitHub/programmer-english/src/pages/Typing/hooks/useSwitcherState.ts"],"names":["useState","useSetSoundState","useDarkMode","useSwitcherState","initialState","phonetic","setPhonetic","wordVisible","setWordVisible","sound","setSound","darkMode","setDarkMode","dispatch","type","newStatus"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,gBAA9C;;AAWA,MAAMC,gBAAgB,GAAIC,YAAD,IAIwB;AAAA;;AAC/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACI,YAAY,CAACC,QAAd,CAAxC;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACI,YAAY,CAACG,WAAd,CAA9C;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBT,gBAAgB,EAA1C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BV,WAAW,EAA3C;;AAEA,QAAMW,QAA8B,GAAG,CAACC,IAAD,EAAOC,SAAP,KAAqB;AAC1D,YAAQD,IAAR;AACE,WAAK,UAAL;AACER,QAAAA,WAAW,CAACS,SAAD,aAACA,SAAD,cAACA,SAAD,GAAc,CAACV,QAAf,CAAX;AACA;;AACF,WAAK,aAAL;AACEG,QAAAA,cAAc,CAACO,SAAD,aAACA,SAAD,cAACA,SAAD,GAAc,CAACR,WAAf,CAAd;AACA;;AACF,WAAK,OAAL;AACEG,QAAAA,QAAQ,CAACK,SAAD,aAACA,SAAD,cAACA,SAAD,GAAc,CAACN,KAAf,CAAR;AACA;;AACF,WAAK,UAAL;AACEG,QAAAA,WAAW,CAACG,SAAD,aAACA,SAAD,cAACA,SAAD,GAAc,CAACJ,QAAf,CAAX;AAXJ;AAaD,GAdD;;AAeA,SAAO,CAAC;AAAEN,IAAAA,QAAF;AAAYE,IAAAA,WAAZ;AAAyBE,IAAAA,KAAzB;AAAgCE,IAAAA;AAAhC,GAAD,EAA6CE,QAA7C,CAAP;AACD,CA1BD;;GAAMV,gB;UAOsBF,gB,EACMC,W;;;AAoBlC,eAAeC,gBAAf","sourcesContent":["import { useState } from 'react'\nimport { useSetSoundState, useDarkMode } from 'store/AppState'\n\nexport type SwitcherStateType = {\n  phonetic: boolean\n  wordVisible: boolean\n  sound: boolean\n  darkMode: boolean\n}\n\nexport type SwitcherDispatchType = (type: string, newStatus?: boolean) => void\n\nconst useSwitcherState = (initialState: {\n  phonetic: boolean\n  wordVisible: boolean\n  darkMode?: boolean\n}): [SwitcherStateType, SwitcherDispatchType] => {\n  const [phonetic, setPhonetic] = useState(initialState.phonetic)\n  const [wordVisible, setWordVisible] = useState(initialState.wordVisible)\n  const [sound, setSound] = useSetSoundState()\n  const [darkMode, setDarkMode] = useDarkMode()\n\n  const dispatch: SwitcherDispatchType = (type, newStatus) => {\n    switch (type) {\n      case 'phonetic':\n        setPhonetic(newStatus ?? !phonetic)\n        break\n      case 'wordVisible':\n        setWordVisible(newStatus ?? !wordVisible)\n        break\n      case 'sound':\n        setSound(newStatus ?? !sound)\n        break\n      case 'darkMode':\n        setDarkMode(newStatus ?? !darkMode)\n    }\n  }\n  return [{ phonetic, wordVisible, sound, darkMode }, dispatch]\n}\n\nexport default useSwitcherState\n"]},"metadata":{},"sourceType":"module"}