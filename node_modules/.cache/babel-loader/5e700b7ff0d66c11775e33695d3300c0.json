{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/xuel/workspace/GitHub/programmer-english/src/store/AppState.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$();\n\nimport { omit } from 'lodash';\nimport React, { useCallback, useContext } from 'react';\nimport { useLocalStorage } from 'react-use';\nimport { dictionaries } from 'resources/dictionary';\nconst AppStateContext = /*#__PURE__*/React.createContext({});\n/**\n * Get the global app state.\n */\n\nexport function useAppState() {\n  _s();\n\n  const {\n    state\n  } = useContext(AppStateContext);\n  return state;\n}\n\n_s(useAppState, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\n\nexport function useSetSoundState() {\n  _s2();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppStateContext);\n  const setSound = useCallback(sound => dispatch({ ...state,\n    sound\n  }), [state, dispatch]);\n  return [state.sound, setSound];\n}\n/**\n * Use all available dictionaries.\n */\n\n_s2(useSetSoundState, \"tBp1I14gRozGm6F8wi9JOoQn7fk=\");\n\nexport function useDictionaries() {\n  _s3();\n\n  const {\n    state\n  } = useContext(AppStateContext);\n  return state.dictionaries;\n}\n\n_s3(useDictionaries, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\n\nexport function useSetDictionary() {\n  _s4();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppStateContext);\n  return id => {\n    const found = dictionaries.find(dict => dict.id === id);\n\n    if (found !== undefined) {\n      // TODO: remove magic number here.\n      const lastChapterNumber = Math.floor(found.length / 20);\n      dispatch({ ...state,\n        selectedDictionary: found,\n        selectedChapter: Math.min(state.selectedChapter, lastChapterNumber)\n      });\n    }\n  };\n}\n/**\n * Use the current selected dictionary.\n */\n\n_s4(useSetDictionary, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\n\nexport function useSelectedDictionary() {\n  _s5();\n\n  const {\n    state\n  } = useContext(AppStateContext);\n  return state.selectedDictionary;\n}\n\n_s5(useSelectedDictionary, \"1KanyRZ80sTgEeQF1ogKen7i0wM=\");\n\nexport function useSetPronunciationState() {\n  _s6();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppStateContext);\n  const setPronunciation = useCallback(pronunciation => dispatch({ ...state,\n    pronunciation\n  }), [state, dispatch]);\n  return [state.pronunciation, setPronunciation];\n}\n/**\n * Use the current selected chapter.\n */\n\n_s6(useSetPronunciationState, \"HqudsjPw1gxadzE9Wrlw12fUAyA=\");\n\nexport function useSelectedChapter() {\n  _s7();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppStateContext);\n  return [state.selectedChapter, selectedChapter => dispatch({ ...state,\n    selectedChapter\n  })];\n}\n/**\n * Dark Mode\n */\n\n_s7(useSelectedChapter, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\n\nexport function useDarkMode() {\n  _s8();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppStateContext);\n  const setDarkMode = useCallback(darkMode => {\n    dispatch({ ...state,\n      darkMode\n    });\n    darkMode ? document.documentElement.classList.add('dark') : document.documentElement.classList.remove('dark');\n  }, [state, dispatch]);\n  return [state.darkMode, setDarkMode];\n}\n\n_s8(useDarkMode, \"ssERIMAcGPzrT9JFqIjQLvaIu0s=\");\n\nconst defaultState = {\n  sound: true,\n  dictionaries,\n  selectedDictionary: dictionaries[0],\n  pronunciation: 'us',\n  selectedChapter: 0,\n  darkMode: window.matchMedia('(prefers-color-scheme: dark)').matches\n};\nexport const AppStateProvider = ({\n  children\n}) => {\n  _s9();\n\n  const [state, setState] = useLocalStorage('state', defaultState, options);\n  return /*#__PURE__*/_jsxDEV(AppStateContext.Provider, {\n    value: {\n      state: state,\n      dispatch: setState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 10\n  }, this);\n};\n\n_s9(AppStateProvider, \"tVXM52hqiLz0ETuwoM/CiEIKJU8=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = AppStateProvider;\nconst options = {\n  raw: false,\n\n  serializer(state) {\n    return JSON.stringify(omit(state, 'dictionaries'));\n  },\n\n  deserializer(source) {\n    const state = JSON.parse(source);\n    state.dictionaries = dictionaries;\n    return state;\n  }\n\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AppStateProvider\");","map":{"version":3,"sources":["/Users/xuel/workspace/GitHub/programmer-english/src/store/AppState.tsx"],"names":["omit","React","useCallback","useContext","useLocalStorage","dictionaries","AppStateContext","createContext","useAppState","state","useSetSoundState","dispatch","setSound","sound","useDictionaries","useSetDictionary","id","found","find","dict","undefined","lastChapterNumber","Math","floor","length","selectedDictionary","selectedChapter","min","useSelectedDictionary","useSetPronunciationState","setPronunciation","pronunciation","useSelectedChapter","useDarkMode","setDarkMode","darkMode","document","documentElement","classList","add","remove","defaultState","window","matchMedia","matches","AppStateProvider","children","setState","options","raw","serializer","JSON","stringify","deserializer","source","parse"],"mappings":"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","sourcesContent":["import { omit } from 'lodash'\nimport React, { useCallback, useContext } from 'react'\nimport { useLocalStorage } from 'react-use'\nimport { dictionaries, Dictionary } from 'resources/dictionary'\n\nexport type PronunciationType = 'us' | 'uk' | 'jap' | false\n\nexport type AppState = {\n  /**\n   * Whether the sound is enabled.\n   */\n  sound: boolean\n  /**\n   * Available dictionaries.\n   * This field should not be written to `localStorage`.\n   */\n  dictionaries: Dictionary[]\n  /**\n   * The selected dictionary.\n   */\n  selectedDictionary: Dictionary\n  /**\n   * Which type of pronunciation is used.\n   * Available options: `\"us\"`, `\"uk\"`, `\"jap\"`and `false`.\n   */\n  pronunciation: PronunciationType\n  /**\n   * The selected chapter number.\n   */\n  selectedChapter: number\n  /**\n   * Whether dark mode is enabled\n   */\n  darkMode: boolean\n}\n\nexport type AppStateData = {\n  state: AppState\n  dispatch: (state: AppState) => void\n}\n\nconst AppStateContext = React.createContext<AppStateData>({} as AppStateData)\n\n/**\n * Get the global app state.\n */\nexport function useAppState(): AppState {\n  const { state } = useContext(AppStateContext)\n  return state\n}\n\nexport function useSetSoundState(): [status: boolean, setSound: (state: boolean) => void] {\n  const { state, dispatch } = useContext(AppStateContext)\n  const setSound = useCallback((sound: boolean) => dispatch({ ...state, sound }), [state, dispatch])\n  return [state.sound, setSound]\n}\n\n/**\n * Use all available dictionaries.\n */\nexport function useDictionaries(): Dictionary[] {\n  const { state } = useContext(AppStateContext)\n  return state.dictionaries\n}\n\nexport function useSetDictionary(): (id: string) => void {\n  const { state, dispatch } = useContext(AppStateContext)\n  return (id: string) => {\n    const found = dictionaries.find((dict) => dict.id === id)\n    if (found !== undefined) {\n      // TODO: remove magic number here.\n      const lastChapterNumber = Math.floor(found.length / 20)\n      dispatch({ ...state, selectedDictionary: found, selectedChapter: Math.min(state.selectedChapter, lastChapterNumber) })\n    }\n  }\n}\n\n/**\n * Use the current selected dictionary.\n */\nexport function useSelectedDictionary(): Dictionary {\n  const { state } = useContext(AppStateContext)\n  return state.selectedDictionary\n}\n\nexport function useSetPronunciationState(): [status: PronunciationType, setPronunciation: (state: PronunciationType) => void] {\n  const { state, dispatch } = useContext(AppStateContext)\n  const setPronunciation = useCallback((pronunciation: PronunciationType) => dispatch({ ...state, pronunciation }), [state, dispatch])\n  return [state.pronunciation, setPronunciation]\n}\n\n/**\n * Use the current selected chapter.\n */\nexport function useSelectedChapter(): [number, (chapter: number) => void] {\n  const { state, dispatch } = useContext(AppStateContext)\n  return [state.selectedChapter, (selectedChapter: number): void => dispatch({ ...state, selectedChapter })]\n}\n\n/**\n * Dark Mode\n */\nexport function useDarkMode(): [darkMode: boolean, setDarkMode: (state: boolean) => void] {\n  const { state, dispatch } = useContext(AppStateContext)\n  const setDarkMode = useCallback(\n    (darkMode: boolean) => {\n      dispatch({ ...state, darkMode })\n      darkMode ? document.documentElement.classList.add('dark') : document.documentElement.classList.remove('dark')\n    },\n    [state, dispatch],\n  )\n\n  return [state.darkMode, setDarkMode]\n}\n\nconst defaultState: AppState = {\n  sound: true,\n  dictionaries,\n  selectedDictionary: dictionaries[0],\n  pronunciation: 'us',\n  selectedChapter: 0,\n  darkMode: window.matchMedia('(prefers-color-scheme: dark)').matches,\n}\n\nexport const AppStateProvider: React.FC<React.PropsWithChildren<{}>> = ({ children }) => {\n  const [state, setState] = useLocalStorage<AppState>('state', defaultState, options)\n  return <AppStateContext.Provider value={{ state: state!, dispatch: setState }}>{children}</AppStateContext.Provider>\n}\n\nconst options = {\n  raw: false,\n  serializer(state: AppState): string {\n    return JSON.stringify(omit(state, 'dictionaries'))\n  },\n  deserializer(source: string): AppState {\n    const state: AppState = JSON.parse(source)\n    state.dictionaries = dictionaries\n    return state\n  },\n}\n"]},"metadata":{},"sourceType":"module"}