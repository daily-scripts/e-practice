{"ast":null,"code":"export const isLegal = val => /^[a-z_A-Z_._(_)_0-9'!,='?\\-;[\\]\\\\/]$/.test(val);\nexport const isChineseSymbol = val => /[\\u3002|\\uff1f|\\uff01|\\uff0c|\\u3001|\\uff1b|\\uff1a|\\u201c|\\u201d|\\u2018|\\u2019|\\uff08|\\uff09|\\u300a|\\u300b|\\u3008|\\u3009|\\u3010|\\u3011|\\u300e|\\u300f|\\u300c|\\u300d|\\ufe43|\\ufe44|\\u3014|\\u3015|\\u2026|\\u2014|\\uff5e|\\ufe4f|\\uffe5]/.test(val);\nexport const IsDesktop = () => {\n  const userAgentInfo = navigator.userAgent;\n  const Agents = ['Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod'];\n  let flag = true;\n\n  for (let v = 0; v < Agents.length; v++) {\n    if (userAgentInfo.indexOf(Agents[v]) > 0) {\n      flag = false;\n      break;\n    }\n  }\n\n  return flag;\n};\n_c = IsDesktop;\nexport function addHowlListener(howl, ...args) {\n  howl.on(...args);\n  return () => howl.off(...args);\n}\nexport function classNames(...classNames) {\n  const finallyClassNames = [];\n\n  for (const className of classNames) {\n    if (className) {\n      finallyClassNames.push(className.trim());\n    }\n  }\n\n  return finallyClassNames.join(' ');\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"IsDesktop\");","map":{"version":3,"sources":["/Users/xuel/workspace/GitHub/programmer-english/src/utils/utils.ts"],"names":["isLegal","val","test","isChineseSymbol","IsDesktop","userAgentInfo","navigator","userAgent","Agents","flag","v","length","indexOf","addHowlListener","howl","args","on","off","classNames","finallyClassNames","className","push","trim","join"],"mappings":"AAEA,OAAO,MAAMA,OAAO,GAAIC,GAAD,IAA0B,uCAAuCC,IAAvC,CAA4CD,GAA5C,CAA1C;AACP,OAAO,MAAME,eAAe,GAAIF,GAAD,IAC7B,oOAAoOC,IAApO,CACED,GADF,CADK;AAKP,OAAO,MAAMG,SAAS,GAAG,MAAM;AAC7B,QAAMC,aAAa,GAAGC,SAAS,CAACC,SAAhC;AACA,QAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,eAAnC,EAAoD,MAApD,EAA4D,MAA5D,CAAf;AAEA,MAAIC,IAAI,GAAG,IAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,QAAIL,aAAa,CAACO,OAAd,CAAsBJ,MAAM,CAACE,CAAD,CAA5B,IAAmC,CAAvC,EAA0C;AACxCD,MAAAA,IAAI,GAAG,KAAP;AACA;AACD;AACF;;AACD,SAAOA,IAAP;AACD,CAZM;KAAML,S;AAcb,OAAO,SAASS,eAAT,CAAyBC,IAAzB,EAAqC,GAAGC,IAAxC,EAAsE;AAC3ED,EAAAA,IAAI,CAACE,EAAL,CAAQ,GAAGD,IAAX;AAEA,SAAO,MAAMD,IAAI,CAACG,GAAL,CAAS,GAAGF,IAAZ,CAAb;AACD;AAED,OAAO,SAASG,UAAT,CAAoB,GAAGA,UAAvB,EAAgE;AACrE,QAAMC,iBAA2B,GAAG,EAApC;;AAEA,OAAK,MAAMC,SAAX,IAAwBF,UAAxB,EAAoC;AAClC,QAAIE,SAAJ,EAAe;AACbD,MAAAA,iBAAiB,CAACE,IAAlB,CAAuBD,SAAS,CAACE,IAAV,EAAvB;AACD;AACF;;AAED,SAAOH,iBAAiB,CAACI,IAAlB,CAAuB,GAAvB,CAAP;AACD","sourcesContent":["import { Howl } from 'howler'\n\nexport const isLegal = (val: string): boolean => /^[a-z_A-Z_._(_)_0-9'!,='?\\-;[\\]\\\\/]$/.test(val)\nexport const isChineseSymbol = (val: string): boolean =>\n  /[\\u3002|\\uff1f|\\uff01|\\uff0c|\\u3001|\\uff1b|\\uff1a|\\u201c|\\u201d|\\u2018|\\u2019|\\uff08|\\uff09|\\u300a|\\u300b|\\u3008|\\u3009|\\u3010|\\u3011|\\u300e|\\u300f|\\u300c|\\u300d|\\ufe43|\\ufe44|\\u3014|\\u3015|\\u2026|\\u2014|\\uff5e|\\ufe4f|\\uffe5]/.test(\n    val,\n  )\n\nexport const IsDesktop = () => {\n  const userAgentInfo = navigator.userAgent\n  const Agents = ['Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod']\n\n  let flag = true\n  for (let v = 0; v < Agents.length; v++) {\n    if (userAgentInfo.indexOf(Agents[v]) > 0) {\n      flag = false\n      break\n    }\n  }\n  return flag\n}\n\nexport function addHowlListener(howl: Howl, ...args: Parameters<Howl['on']>) {\n  howl.on(...args)\n\n  return () => howl.off(...args)\n}\n\nexport function classNames(...classNames: Array<string | void | null>) {\n  const finallyClassNames: string[] = []\n\n  for (const className of classNames) {\n    if (className) {\n      finallyClassNames.push(className.trim())\n    }\n  }\n\n  return finallyClassNames.join(' ')\n}\n"]},"metadata":{},"sourceType":"module"}