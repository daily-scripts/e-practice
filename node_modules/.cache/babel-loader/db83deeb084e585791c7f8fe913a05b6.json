{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nexport const useModals = (initialState, initialTitle) => {\n  _s();\n\n  const [modalState, setModalState] = useState(initialState);\n  const [title, setTitle] = useState(initialTitle);\n  const [content, setContent] = useState('');\n  const [firstButton, setFirstButton] = useState('');\n  const [secondButton, setSecondButton] = useState('');\n  const [thirdButton, setThirdButton] = useState('');\n  const [firstButtonOnclick, setFirstButtonOnclick] = useState(() => {});\n  const [secondButtonOnclick, setSecondButtonOnclick] = useState(() => {});\n  const [thirdButtonOnclick, setThirdButtonOnclick] = useState(() => {});\n  const [thirdBtnHotkey, setThirdBtnHotkey] = useState('');\n\n  const setMessage = (title, content, firstButton, secondButton, thirdButton) => {\n    setTitle(title);\n    setContent(content);\n    setFirstButton(firstButton);\n    setSecondButton(secondButton);\n\n    if (thirdButton) {\n      setThirdButton(thirdButton);\n    }\n  };\n\n  const setHandler = (firstButton, secondButton, thirdButton) => {\n    setFirstButtonOnclick(() => firstButton);\n    setSecondButtonOnclick(() => secondButton);\n\n    if (thirdButton) {\n      setThirdButtonOnclick(() => thirdButton);\n    }\n  };\n\n  return {\n    modalState,\n    title,\n    content,\n    firstButton,\n    secondButton,\n    thirdButton,\n    thirdBtnHotkey,\n    firstButtonOnclick,\n    secondButtonOnclick,\n    thirdButtonOnclick,\n    setModalState,\n    setMessage,\n    setHandler,\n    setThirdBtnHotkey\n  };\n};\n\n_s(useModals, \"XX1YCorYA9b+62zOPSc+0WIGIg4=\");","map":{"version":3,"sources":["/Users/xuel/workspace/GitHub/programmer-english/src/hooks/useModals.ts"],"names":["useState","useModals","initialState","initialTitle","modalState","setModalState","title","setTitle","content","setContent","firstButton","setFirstButton","secondButton","setSecondButton","thirdButton","setThirdButton","firstButtonOnclick","setFirstButtonOnclick","secondButtonOnclick","setSecondButtonOnclick","thirdButtonOnclick","setThirdButtonOnclick","thirdBtnHotkey","setThirdBtnHotkey","setMessage","setHandler"],"mappings":";;AAAA,SAASA,QAAT,QAAqC,OAArC;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,YAAD,EAAwBC,YAAxB,KAAiD;AAAA;;AACxE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAUE,YAAV,CAA5C;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACG,YAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,kBAAD,EAAqBC,qBAArB,IAA8CjB,QAAQ,CAA0B,MAAM,CAAE,CAAlC,CAA5D;AACA,QAAM,CAACkB,mBAAD,EAAsBC,sBAAtB,IAAgDnB,QAAQ,CAA0B,MAAM,CAAE,CAAlC,CAA9D;AACA,QAAM,CAACoB,kBAAD,EAAqBC,qBAArB,IAA8CrB,QAAQ,CAA0B,MAAM,CAAE,CAAlC,CAA5D;AACA,QAAM,CAACsB,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMwB,UAAU,GAAG,CAAClB,KAAD,EAAgBE,OAAhB,EAAiCE,WAAjC,EAAsDE,YAAtD,EAA4EE,WAA5E,KAAqG;AACtHP,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,IAAAA,eAAe,CAACD,YAAD,CAAf;;AACA,QAAIE,WAAJ,EAAiB;AACfC,MAAAA,cAAc,CAACD,WAAD,CAAd;AACD;AACF,GARD;;AAUA,QAAMW,UAAU,GAAG,CACjBf,WADiB,EAEjBE,YAFiB,EAGjBE,WAHiB,KAId;AACHG,IAAAA,qBAAqB,CAAC,MAAMP,WAAP,CAArB;AACAS,IAAAA,sBAAsB,CAAC,MAAMP,YAAP,CAAtB;;AACA,QAAIE,WAAJ,EAAiB;AACfO,MAAAA,qBAAqB,CAAC,MAAMP,WAAP,CAArB;AACD;AACF,GAVD;;AAWA,SAAO;AACLV,IAAAA,UADK;AAELE,IAAAA,KAFK;AAGLE,IAAAA,OAHK;AAILE,IAAAA,WAJK;AAKLE,IAAAA,YALK;AAMLE,IAAAA,WANK;AAOLQ,IAAAA,cAPK;AAQLN,IAAAA,kBARK;AASLE,IAAAA,mBATK;AAULE,IAAAA,kBAVK;AAWLf,IAAAA,aAXK;AAYLmB,IAAAA,UAZK;AAaLC,IAAAA,UAbK;AAcLF,IAAAA;AAdK,GAAP;AAgBD,CAjDM;;GAAMtB,S","sourcesContent":["import { useState, MouseEvent } from 'react'\n\nexport const useModals = (initialState: boolean, initialTitle: string) => {\n  const [modalState, setModalState] = useState<boolean>(initialState)\n  const [title, setTitle] = useState(initialTitle)\n  const [content, setContent] = useState('')\n  const [firstButton, setFirstButton] = useState('')\n  const [secondButton, setSecondButton] = useState('')\n  const [thirdButton, setThirdButton] = useState('')\n  const [firstButtonOnclick, setFirstButtonOnclick] = useState<(e: MouseEvent) => void>(() => {})\n  const [secondButtonOnclick, setSecondButtonOnclick] = useState<(e: MouseEvent) => void>(() => {})\n  const [thirdButtonOnclick, setThirdButtonOnclick] = useState<(e: MouseEvent) => void>(() => {})\n  const [thirdBtnHotkey, setThirdBtnHotkey] = useState('')\n\n  const setMessage = (title: string, content: string, firstButton: string, secondButton: string, thirdButton?: string) => {\n    setTitle(title)\n    setContent(content)\n    setFirstButton(firstButton)\n    setSecondButton(secondButton)\n    if (thirdButton) {\n      setThirdButton(thirdButton)\n    }\n  }\n\n  const setHandler = (\n    firstButton: (e: MouseEvent) => void,\n    secondButton: (e: MouseEvent) => void,\n    thirdButton?: (e: MouseEvent) => void,\n  ) => {\n    setFirstButtonOnclick(() => firstButton)\n    setSecondButtonOnclick(() => secondButton)\n    if (thirdButton) {\n      setThirdButtonOnclick(() => thirdButton)\n    }\n  }\n  return {\n    modalState,\n    title,\n    content,\n    firstButton,\n    secondButton,\n    thirdButton,\n    thirdBtnHotkey,\n    firstButtonOnclick,\n    secondButtonOnclick,\n    thirdButtonOnclick,\n    setModalState,\n    setMessage,\n    setHandler,\n    setThirdBtnHotkey,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}